// Mocks generated by Mockito 5.1.0 from annotations
// in tatlacas_authentication/test/blocs/oauth_login/oauth_login_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i6;

import 'package:bloc/bloc.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:tatlacas_authentication/src/blocs/authentication/authentication_bloc.dart'
    as _i3;
import 'package:tatlacas_authentication/src/repos/oauth_repository/oauth_repository.dart'
    as _i8;
import 'package:tatlacas_authentication/src/repos/user_repository/models/user_entity.dart'
    as _i4;
import 'package:tatlacas_authentication/src/repos/user_repository/user_repository.dart'
    as _i2;
import 'package:tatlacas_flutter_oauth/app_auth_export.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeUserRepository_0 extends _i1.Fake implements _i2.UserRepository {}

class _FakeAuthenticationState_1 extends _i1.Fake
    implements _i3.AuthenticationState {}

class _FakeUserEntity_2 extends _i1.Fake implements _i4.UserEntity {}

class _FakeFlutterAppAuth_3 extends _i1.Fake implements _i5.FlutterAppAuth {}

class _FakeAuthorizationTokenRequest_4 extends _i1.Fake
    implements _i5.AuthorizationTokenRequest {}

/// A class which mocks [AuthenticationBloc].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthenticationBloc extends _i1.Mock
    implements _i3.AuthenticationBloc {
  MockAuthenticationBloc() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.UserRepository get userRepository =>
      (super.noSuchMethod(Invocation.getter(#userRepository),
          returnValue: _FakeUserRepository_0()) as _i2.UserRepository);
  @override
  _i3.AuthenticationState get state => (super.noSuchMethod(
      Invocation.getter(#state),
      returnValue: _FakeAuthenticationState_1()) as _i3.AuthenticationState);
  @override
  _i6.Stream<_i3.AuthenticationState> get stream =>
      (super.noSuchMethod(Invocation.getter(#stream),
              returnValue: Stream<_i3.AuthenticationState>.empty())
          as _i6.Stream<_i3.AuthenticationState>);
  @override
  bool get isClosed =>
      (super.noSuchMethod(Invocation.getter(#isClosed), returnValue: false)
          as bool);
  @override
  void add(_i3.AuthenticationEvent? event) =>
      super.noSuchMethod(Invocation.method(#add, [event]),
          returnValueForMissingStub: null);
  @override
  void onEvent(_i3.AuthenticationEvent? event) =>
      super.noSuchMethod(Invocation.method(#onEvent, [event]),
          returnValueForMissingStub: null);
  @override
  void emit(_i3.AuthenticationState? state) =>
      super.noSuchMethod(Invocation.method(#emit, [state]),
          returnValueForMissingStub: null);
  @override
  void on<E extends _i3.AuthenticationEvent>(
          _i7.EventHandler<E, _i3.AuthenticationState>? handler,
          {_i7.EventTransformer<E>? transformer}) =>
      super.noSuchMethod(
          Invocation.method(#on, [handler], {#transformer: transformer}),
          returnValueForMissingStub: null);
  @override
  void onTransition(
          _i7.Transition<_i3.AuthenticationEvent, _i3.AuthenticationState>?
              transition) =>
      super.noSuchMethod(Invocation.method(#onTransition, [transition]),
          returnValueForMissingStub: null);
  @override
  _i6.Future<void> close() => (super.noSuchMethod(Invocation.method(#close, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i6.Future<void>);
  @override
  void onChange(_i7.Change<_i3.AuthenticationState>? change) =>
      super.noSuchMethod(Invocation.method(#onChange, [change]),
          returnValueForMissingStub: null);
  @override
  void addError(Object? error, [StackTrace? stackTrace]) =>
      super.noSuchMethod(Invocation.method(#addError, [error, stackTrace]),
          returnValueForMissingStub: null);
  @override
  void onError(Object? error, StackTrace? stackTrace) =>
      super.noSuchMethod(Invocation.method(#onError, [error, stackTrace]),
          returnValueForMissingStub: null);
}

/// A class which mocks [UserRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRepository extends _i1.Mock implements _i2.UserRepository {
  MockUserRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i4.UserEntity> saveUser(_i4.UserEntity? user) =>
      (super.noSuchMethod(Invocation.method(#saveUser, [user]),
              returnValue: Future<_i4.UserEntity>.value(_FakeUserEntity_2()))
          as _i6.Future<_i4.UserEntity>);
  @override
  _i6.Future<_i4.UserEntity?> getUser() =>
      (super.noSuchMethod(Invocation.method(#getUser, []),
              returnValue: Future<_i4.UserEntity?>.value())
          as _i6.Future<_i4.UserEntity?>);
  @override
  _i6.Future<void> removeUser() =>
      (super.noSuchMethod(Invocation.method(#removeUser, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i6.Future<void>);
}

/// A class which mocks [OauthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockOauthRepository extends _i1.Mock implements _i8.OauthRepository {
  MockOauthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.FlutterAppAuth get flutterAppAuth =>
      (super.noSuchMethod(Invocation.getter(#flutterAppAuth),
          returnValue: _FakeFlutterAppAuth_3()) as _i5.FlutterAppAuth);
  @override
  _i5.AuthorizationTokenRequest get authorizationTokenRequest =>
      (super.noSuchMethod(Invocation.getter(#authorizationTokenRequest),
              returnValue: _FakeAuthorizationTokenRequest_4())
          as _i5.AuthorizationTokenRequest);
  @override
  _i6.Future<_i5.AuthorizationTokenResponse?> authenticate(dynamic authType) =>
      (super.noSuchMethod(Invocation.method(#authenticate, [authType]),
              returnValue: Future<_i5.AuthorizationTokenResponse?>.value())
          as _i6.Future<_i5.AuthorizationTokenResponse?>);
  @override
  _i5.AuthorizationTokenRequest tokenRequestFor(dynamic authType) =>
      (super.noSuchMethod(Invocation.method(#tokenRequestFor, [authType]),
              returnValue: _FakeAuthorizationTokenRequest_4())
          as _i5.AuthorizationTokenRequest);
}
